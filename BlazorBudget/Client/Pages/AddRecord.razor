@page "/record/add"
@page "/record/edit/{RecordId:int}"
@using Microsoft.AspNetCore.Components
@using BlazorBudget.Shared.Models

@inject HttpClient Http
@inject NavigationManager NavigationManager
<h1>@Title Record</h1>
<hr />
<EditForm Model="@Record" OnValidSubmit="SaveRecord">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Date" class="form-label">Date</label>
        <div class="col-md-4">
            <InputDate class="form-control" @bind-Value="Record.Date" />
        </div>
        <ValidationMessage For="@(() => Record.Date)" />
    </div>
    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="Record.Name" />
        </div>
        <ValidationMessage For="@(() => Record.Name)" />
    </div>
    <div class="mb-3">
        <label for="Value" class="form-label">Value</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="Record.Value" />
        </div>
        <ValidationMessage For="@(() => Record.Value)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>
@code {
    [Parameter]
    public int RecordId { get; set; }
    protected string Title = "Add";
    protected Record Record = new();
    protected override async Task OnParametersSetAsync()
    {
        if (RecordId != 0)
        {
            Title = "Edit";
            Record = await Http.GetFromJsonAsync<Record>("api/Record/" + RecordId);
        }
    }
    protected async Task SaveRecord()
    {
        Record.CategoryId = 1;
        try
        {
            if (Record.RecordId != 0)
            {
                await Http.PutAsJsonAsync("api/Record", Record);
            }
            else
            {
                await Http.PostAsJsonAsync("api/Record", Record);
            }
        }
        catch
        {
            throw;
        }
        
        Cancel();
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }
}